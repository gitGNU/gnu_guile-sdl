2011-12-02  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise some window-manager procs.

	* rect.scm: Use ‘(sdl sdl)’ procs ‘set-icon’,
	‘get-wm-info’, ‘get-caption’, ‘set-caption’.

2011-12-02  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise ‘show-cursor’.

	* cursor.scm: Make sure the cursor is visible.

2011-12-01  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise ‘save-bmp’, ‘load-bmp’.

	* image.scm <top>: Round-trip screen to/from .bmp file.

2011-12-01  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise ‘surface?’, ‘surface:depth’, ‘surface:flags’.

	* rect.scm: Check that ‘screen’ is a surface; exit
	failurefully if not; gather depth, flags; display if ‘verbose?’.

2011-11-30  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Return / take u16 uvec for gamma-ramp getter / setter procs.

	* cursor.scm (spew-ramp): New proc.
	<top-level>: Call ‘SDL:get-gamma-ramp’ and ‘spew-ramp’.
	<cursor loop>: Use ‘make-u16vector’, ‘u16vector-set!’.

2011-11-30  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Restrict type to u8 uvec for some ‘create-cursor’ args.

	* cursor.scm: Import (srfi srfi-4).
	(random-16): Use ‘list->u8vector’.
	<final cursor>: Use ‘u8vector’.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v cursor] Center the pointer precisely; ignore INTERACTIVE=1.

	* cursor.scm: Don't skip if ‘INTERACTIVE=1’.
	<mouse-warp>: Bump UL corner so pointer center is screen center.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise ‘(sdl ttf) render-glyph’.

	* ttf.scm (spew-at): New proc.
	<top-level>: Call ‘spew-at’.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise some TTF procs for handling UTF-8.

	* ttf.scm: Add ‘coding: utf-8’ to first-line comment.
	(renderer, spew-utf-8): New procs.
	<top-level>: Call ‘spew-utf-8’.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise flagstash:{event-mask,ttf}.

	* alive.test <top>: Add ‘flagstash:event-mask’ to core list.
	<*have-ttf*>: Access ‘flagstash:ttf’.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[int] Use ‘zero?’.

	* cursor.scm <initial blit>: Use ‘zero?’.
	* ttf.scm <TTF init>: Likewise.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v int] Use ‘even?’.

	* event.scm (ignore-maybe): Use ‘even?’.

2011-11-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v int] Use different #:prefix for each module.

	U (X, Y) ≡ "Use #:prefix ‘X:’ for importing (sdl Y)".
	Implicit ∀ files: Update references.
	* alive.test <*have-ttf*>: U (TTF, ttf).
	<*have-mixer*>: U (MIXER, mixer).
	* event.scm: U (TTF, ttf).
	* gfx.scm: U (GFX, gfx).
	* leak.scm <top>: Don't import (sdl ttf) unconditionally.
	<*have-ttf*>: U (TTF, ttf).
	<*have-mixer*>: U (MIXER, mixer).
	* mixer.scm: U (MIXER, mixer).
	* ttf.scm: U (TTF, ttf).

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Exercise some more (sdl ttf) procs.

	* ttf.scm (font-loader): New proc.
	(fonts): Use ‘font-loader’.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Make sure tests explicitly ‘exit’.

	* cursor.scm: Exit with value returned by ‘SDL:quit’.
	* event.scm: Likewise.
	* fading.scm: Likewise.
	* gfx.scm: Likewise.
	* image.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.
	* roto.scm: Likewise.
	* ttf.scm: Likewise.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Make tests less weary for the impatient.

	* cursor.scm: Don't delay after warping the mouse;
	reduce loop delay to 100msec, end delay to 420msec.
	* fading.scm: Reduce loop delay to 420msec.
	* gfx.scm <character and IMFI>: Reduce loop iteration to 100.
	<top>: Reduce end delay to 500msec.
	* rect.scm: Eliminate loop delay.
	<top>: Add end delay.
	* roto.scm <first spin>: Reduce loop delay to 50msec.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	For import, use #:prefix instead of #:renamer.

	* alive.test: Use #:prefix in ‘use-modules’ forms.
	* cursor.scm: Likewise.
	* event.scm: Likewise.
	* fading.scm: Likewise.
	* gfx.scm: Likewise.
	* image.scm: Likewise.
	* leak.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.
	* roto.scm: Likewise.
	* ttf.scm: Likewise.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v int] Use some (guile-baux common) procs unconditionally.

	* common: Import (guile-baux common) procs ‘fs’, ‘fso’, ‘fse’.
	(fso): Delete proc.
	* alive.test (debug?): Delete redundant var.
	(d>>): Use ‘fse’.
	* event.scm (display-centered-w/height-proc): Use ‘fs’.
	* t99-cov: Don't import (guile-baux common).

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Add test coverage test for MAINTAINER_MODE; mark xfail.

	* t99-cov: New file.
	* Makefile.am (XFAIL_TESTS): New var.
	[MAINTAINER_MODE] (CLEANFILES): New var.
	[MAINTAINER_MODE] (check_DATA): Add t99.list.
	[MAINTAINER_MODE] (XFAIL_TESTS): Add t99-cov.
	[MAINTAINER_MODE] (TESTS): Add t99-cov.
	[MAINTAINER_MODE] (t99.list): New target.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v int] Make Guile-BAUX modules available to tests.

	* zow.in: Invoke Guile with -L ‘"${srcdir}/../build-aux"’.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Add ‘VERBOSE=1’ support.

	* common (verbose?): New var.

2011-11-28  Thien-Thi Nguyen  <ttn@gnuvola.org>

	New (sdl gfx) elements: font-rotation!, font-rotations

	* gfx.scm <character (font) stuff and blitting>:
	Exercise ‘font-rotations’, ‘font-rotation!’, ‘draw-string’.

2011-11-25  Thien-Thi Nguyen  <ttn@gnuvola.org>

	New (sdl gfx) proc: draw-thick-line

	* gfx.scm (one line!-proc): Also draw thick line.

2011-11-24  Thien-Thi Nguyen  <ttn@gnuvola.org>

	New (sdl gfx) proc: draw-rounded-rectangle

	* gfx.scm: Test rounded-rectangle drawing, too.

2011-11-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[slog] Support "make install" and "make check" under Guile 1.8+.

	* zow.in: New file.
	* Makefile.am (TESTS_ENVIRONMENT): Use "sh zow".
	(simu, check_DATA): New vars.
	($(simu), clean-local, installcheck-local): New targets.

2011-11-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Restrict type to s16 uvec for some gfx primitives.

	* gfx.scm: Use module (srfi srfi-4).
	<bezier, polygon>: Use s16 uniform vectors.

2011-11-19  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v] Say "loading ..." for all modules in alive.test.

	* alive.test <top>: Say "loading ..." for ‘(sdl simple)’.

2011-10-24  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[v int] Use ‘~%’ instead of ‘\n’ in format strings.

	* common: Throughout, use ‘~%’ instead of ‘\n’ in format strings.
	* alive.test: Likewise.
	* event.scm: Likewise.
	* gfx.scm: Likewise.
	* leak.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.

2011-05-02  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Test ‘enumstash-enums’, ‘enum->number’, ‘number->enum’.

	* alive.test: List the enums; get their symbols; convert
	syms to ints; convert ints to syms; check round-trip equiv.

2011-05-01  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[maint] Use Free{SansBold,SerifBoldItalic}.ttf for testing.

	These are from the FreeFont Project:
	http://savannah.gnu.org/projects/freefont/
	released under GPLv2+ (as of 2002).

	* FreeSansBold.ttf: New file.
	* FreeSerifBoldItalic.ttf: New file.
	* Makefile.am (etcetc): Delete crystal.ttf;
	add FreeSansBold.ttf, FreeSerifBoldItalic.ttf.
	* crystal.ttf: Delete file.
	* event.scm: Use FreeSansBold.ttf.
	* ttf.scm: Use FreeSerifBoldItalic.ttf.

2011-04-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Fix bug: Make ‘number->flags’ return symbols, not strings.

	* alive.test: Add a test for ‘number->flags’.

2011-04-27  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Exercise ‘set-gamma-ramp’ along with the cursor test.

	* cursor.scm: Every so often, call ‘set-gamma-ramp’
	with random red, green and blue tables.

2011-04-27  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[maint] Move testing machinery into test/.

	* Makefile.am: New file.
	* common (exit-77): Use ‘basename’.
	(datafile): Rewrite.

2011-04-26  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test gfx] Allow disabling of MMX by env var.

	* gfx.scm: If env var ‘NOMMX’ is set, disable MMX.

2009-11-04  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Ensure integer, not just exact, coordinates for line op.

	* gfx.scm (one span-points integer<-): New internal proc.
	(one span-points): Use it.
	Reported by Brian Templeton <bpt@tunes.org>.

2009-10-19  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Avoid `return-it'.

	* ttf.scm: Rephrase main loop to use named-let.

2009-10-19  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test int] Use `datafile' more.

	* cursor.scm: Use `datafile'.
	* event.scm (font): Likewise.
	* fading.scm: Likewise.

2009-04-24  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Release: 0.3.10

2009-04-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Implement `set-event-filter', `get-event-filter'.

	* event.scm: Test `set-event-filter' and `get-event-filter'.

2009-04-04  Thien-Thi Nguyen  <ttn@gnuvola.org>

	New (sdl gfx) proc: draw-arc

	* gfx.scm: Test arc drawing, too.

2009-04-02  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Test character (font) stuff, too.

	* gfx.scm (draw-characters!): New proc.
	Use it in blitting tests to also write characters to SCREEN.

2008-05-30  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Test set-position (mixer).

	* mixer.scm: Use `set-position'.

2008-04-02  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Move alive.test into test/.

	* alive.test: Rename from ../alive.test.

2008-03-31  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Improve leak testing.

	* fx.wav: New file.
	* leak.scm (LOTS): New var.
	(lots): Use `LOTS'.
	(check-alloc/dealloc jam!): Use `LOTS'.
	(alloc/dealloc-tests): If TTF is available, arrange to check
	`load-font'.  Likewise for MIXER and `load-music' and `load-wave'.

2008-03-31  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Use default frequency for testing mixer.

	* background.ogg: Re-encode at 44100 Hz.
	* mixer.scm: Open audio w/ default frequency.

2008-03-21  Thien-Thi Nguyen  <ttn@gnuvola.org>

	For testing, factor common procs, values.

	* common (datafile): New proc.
	(debug?): New boolan;
	if true enable debug evaluator and backtraces.
	* event.scm: Delete `datafile' and `debug?' definitions.
	* gfx.scm: Likewise.
	* image.scm: Likewise.
	* leak.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.
	* roto.scm: Likewise.
	* ttf.scm: Likewise.

2008-03-21  Thien-Thi Nguyen  <ttn@gnuvola.org>

	Add image filter bindings to module (sdl gfx).

	* gfx.scm: Add section to exercise `imfi-FOO' procs.

2007-10-11  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* gfx.scm: Also exercise `blit-rgba'.

2007-10-11  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* gfx.scm: Add section to exercise `set-pixel-alpha!'.

2007-10-10  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* fading.scm: From module (sdl misc-utils), no longer
	select `fade-loop!'.  Instead, select `fader/3p'.
	(fade/wait!): Use `fader/3p'.

2007-09-16  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* ttf.scm (rand-rect): Make sure entire rect fits in the screen.
	(sentence): Make into a circular list of strings.
	(font): Delete.
	(fonts): New data structure.
	(rand-rect): Take FONT and WORD; compute
	both size and dimension of returned rectangle.
	[main]: Cycle through `sentence' and `fonts'
	and mix up background color arg to `render-text'.

2007-09-16  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* fading.scm (as-four): Use `(sdl gfx) shrink-surface'.

2007-09-16  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* roto.scm (spin): New macro.
	Use it to re-implement the `roto-zoom-surface'
	test and to add a test for `roto-zoom-surface-xy'.

2007-09-15  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* gfx.scm: Add textured-polygon drawing.

2007-09-15  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* gfx.scm (SCREEN): New var.  Throughout,
	use it instead of `(SDL:get-video-surface)'.

2007-09-14  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* fading.scm (fade/wait!): Wait a little less.

2007-05-16  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* background.ogg, fx.ogg: New files.
	* mixer.scm (background): Use background.ogg.
	(fx): Use fx.ogg.
	* noise.wav, test.wav: Delete files.

2007-05-16  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* mixer.scm: Open audio at 12048 Hz; play `fx' every 1.5 sec.

2007-03-29  Thien-Thi Nguyen  <ttn@gnuvola.org>

	* mixer.scm: Arrange to skip unless INTERACTIVE=1.

2007-01-09  Thien-Thi Nguyen  <ttn@ambire>

	* rect.scm (rand-rect): Rewrite.

2007-01-08  Thien-Thi Nguyen  <ttn@ambire>

	* rect.scm: Use `update-rect'.

2006-11-16  Thien-Thi Nguyen  <ttn@ambire>

	* fading.scm, gfx.scm, roto.scm: Update call to `fill-rect'.

2006-11-14  Thien-Thi Nguyen  <ttn@ambire>

	* common (exit-77): Use `simple-format'.

2006-07-21  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* cursor.scm: Use gnu-goatee.jpg for background.
	Loop a few times to make it more interesting.

2006-05-29  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* cursor.scm: Arrange to skip unless INTERACTIVE=1.

2006-05-28  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm, leak.scm, mixer.scm, ttf.scm: Use `assq-ref'.

2006-01-28  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* leak.scm (malloced): Do gc twice.

2006-01-28  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* fading.scm: From module (sdl misc-utils), also select `fade-loop!'.
	(fade!): Delete proc.  Update caller to use `fade-loop!'
	passing in a surface unconditionally for REPLACEMENT.

2006-01-27  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm (text-rect): Delete rect.
	(display-centered-w/height-proc): New proc.
	(display-centered): Use `display-centered-w/height-proc'.
	(display-centered/next-line): New proc.
	(input-loop): Also display `SDL:get-key-state' return value.
	Also, use `display-centered-w/height-proc' for "Press Escape" message.

2006-01-27  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm (datadir): Delete proc.
	(font): Incorporate `datadir'.

2005-05-16  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* leak.scm: New file.

2005-01-22  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* gfx.scm: Add bezier, hline, vline and pie-slice drawing.

2005-01-22  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* roto.scm: Use module (sdl gfx).
	Use `GFX:roto-zoom-surface'.

	* fading.scm: Use module (sdl gfx).
	(as-four): Use `GFX:zoom-surface'.

2005-01-06  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* roto.scm: Keep the rotozoomed image centered.

2005-01-06  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm: Display event states before starting the main input loop.
	(display-centered): Take format string and args. Update callers.

2005-01-06  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* rect.scm, mixer.scm, event.scm: Use `simple-format'.

2005-01-06  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* fading.scm: New file.

2004-05-26  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* cursor.scm: Warp the pointer to screen center,
	and wait a bit, before setting the new shape.

2004-05-21  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* gfx.scm: Set `*random-state*'; use current time for seed.
	* rect.scm: Likewise.
	* ttf.scm: Likewise.

2004-05-21  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* rect.scm: Rewrite to not use `call-with-clip-rect'.
	(rand-rect): Rewrite.
	(screen): New var. Use it for demo loop.

2004-05-20  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* gfx.scm: Add section to draw polygons.

2004-05-20  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* gfx.scm: Expand line-drawing.
	Add section to draw ellipses.
	Add section to draw circles.
	Bump before-quit delay to 2000.

2004-03-04  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm (datadir): Delete var.
	(datafile): New proc. Update `datadir' users to use it.
	* image.scm: Likewise.
	* mixer.scm: Likewise.
	* roto.scm: Likewise.
	* ttf.scm: Likewise.

2004-02-23  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* ttf.scm: Check `SDL:ttf-init' return value.

2004-02-08  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* roto.scm: Also vary the zoom parameter.

2003-11-20  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* cursor.scm: Add #:renamer clause for SDL modules.
	Throughout, update names to use "SDL:" prefix instead of "sdl-".
	* gfx.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.
	* ttf.scm: Likewise.
	* event.scm: Likewise.
	* image.scm: Likewise.
	* opengl.scm: Likewise.
	* roto.scm: Likewise.

2003-11-18  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* event.scm: Merge two `use-modules' forms
	for `(sdl sdl)' and `(sdl ttf)' into one.
	* ttf.scm: Likewise.
	* gfx.scm: Likewise for `(sdl sdl)' and `(sdl gfx)'.
	* mixer.scm: Likewise for `(sdl sdl)' and `(sdl mixer)'.

2003-11-11  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* common: New file.

	* cursor.scm: Remove shell-script header.
	Check vars defined in common file, use `exit-77' as appropriate.
	* gfx.scm: Likewise.
	* mixer.scm: Likewise.
	* rect.scm: Likewise.
	* ttf.scm: Likewise
	* event.scm: Likewise.
	* image.scm: Likewise.
	* opengl.scm: Likewise.
	* roto.scm: Likewise.

2003-11-06  Thien-Thi Nguyen  <ttn@surf.glug.org>

	* cursor.scm: Rewrite header in modern-sh-wrapper style.
	* opengl.scm: Likewise.
	* image.scm: Likewise.

	* event.scm: Rewrite header in modern-sh-wrapper style.
	In shell-script header, add checks for env vars
	NONINTERACTIVE and HAVE_TTF, and exit 77 as appropriate.
	No longer use module (ice-9 format).
	Split one `use-modules' into two for `(sdl sdl)' and `(sdl ttf)'.
	(debug?): New var, init from env var DEBUG.
	If non-#f, enable debug evaluator and backtrace on error.

	* rect.scm: Rewrite header in modern-sh-wrapper style.
	(debug?): New var, init from env var DEBUG.
	If non-#f, enable debug evaluator and backtrace on error.
	Also, if `debug?', display `sdl-get-video-info' alist.

	* roto.scm: Rewrite header in modern-sh-wrapper style.
	Replace 15 degrees and one turn,
	with 27 degrees and 3 turns, respectively.

	* ttf.scm: Rewrite header in modern-sh-wrapper style.
	In shell-script header, add checks for env var
	HAVE_TTF, and exit 77 as appropriate.
	No longer use module (ice-9 format).
	Split one `use-modules' into two for `(sdl sdl)' and `(sdl ttf)'.
	(debug?): New var, init from env var DEBUG.
	If non-#f, enable debug evaluator and backtrace on error.

	* gfx.scm: Rewrite header in modern-sh-wrapper style.
	Split one `use-modules' into two for `(sdl sdl)' and `(sdl gfx)'.
	(debug?): New var, init from env var DEBUG.
	If non-#f, enable debug evaluator and backtrace on error.

	* mixer.scm: Rewrite header in modern-sh-wrapper style.
	In shell-script header, add check for env var
	HAVE_MIXER, and exit 77 as appropriate.
	No longer use module (ice-9 format).
	Split one `use-modules' into two for `(sdl sdl)' and `(sdl mixer)'.
	In the case where `sdl-query-spec' returns #f,
	display informative message before doing exit 77.


Copyright (C) 2010, 2011 Thien-Thi Nguyen

Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are preserved.
