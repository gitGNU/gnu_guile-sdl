HACKING Guile-SDL                                               -*- org -*-

This file is both a guide for newcomers and a todo list for oldstayers.
It lives in the repo but is not included in the distribution.

* ongoing (some of which may go into the next release)
*** [[elisp:(dired%20"/usr/include/SDL")][/usr/include/SDL/*.h]] coverage
***** inspection (read-only access)
******* surface [[file:/usr/include/SDL/SDL_video.h::SDL_MUSTLOCK][SDL_MUSTLOCK]] (see also [[pixels%20as%20leased%20array][pixels as leased array]])
******* surface color-key / alpha (value: #f (disabled), or numeric)
******* ? SDL_Surface as Scheme struct
******* ? [[file:/usr/include/SDL/SDL_video.h::struct.SDL_PixelFormat][pixel-format]] details (‘Uint8’ → Scheme struct not possible)
***** mixer
******* hooks
******* effects
***** opengl
*** use pre-installed SDL_gfx if sufficiently functional
    (alternatively, use the subset that is functional)
*** pixels as leased array
    IWBN to have something like ‘(call-with-pixels SPEC PROC)’
    where SPEC is either SURFACE or (SURFACE RECT) and PROC
    is called with one arg, LEASED-ARRAY.  A LEASED-ARRAY is
    an array of u8, u16, u32 directly backed by the ‘.pixels’.
    SURFACE is locked (if necessary) around the call.
*** programming practice
***** comment code (audience: intermediate scheme programmer)
***** return values
******* smob safety
******* 0-means-success
******* consistency
***** error handling cleanup
******* document policy
******* cases: NULL, -1, etc
***** ? gnulib

* portability
  |-----------+-----------+-------+-----|
  |     guile | bootstrap | build | run |
  |-----------+-----------+-------+-----|
  | 1.4.1.118 | yes       | yes   | yes |
  | 1.4.1.119 | yes       | yes   | yes |
  | 1.4.1.124 | yes       | yes   | yes |
  | 1.4.1.127 | n/a       | yes   | yes |
  |     1.8.7 | yes       | yes   | yes |
  |     2.0.6 | n/a       | yes   | yes |
  |     2.0.7 | yes       | yes   | yes |
  |-----------+-----------+-------+-----|

* bootstrap tools
*** usual GNU stuff: Libtool, Autoconf, Automake
*** GNU Guile (see [[portability]] above)
*** SDL 1.2
*** [[http://www.gnuvola.org/software/guile-baux/][Guile-BAUX]]

* coding standards
*** C code: indent -nut
*** indent with emacs (don't like the result? fix emacs!)
*** (setq indent-tabs-mode nil)
*** (add-hook 'before-save-hook 'delete-trailing-whitespace)
*** everything UTF-8
*** assume ‘NULL’ is all bits zero
*** ChangeLog
***** ttn-style: TITLE LF LF {BLURB LF LF}* BODY
***** exclude titles suffixed "; nfc." (no functional change)

* copyright update policy
*** individual files only on change
*** (if (< 2 (- END BEGIN)) RANGE INDIVIDUAL)

* repo branch discipline
*** no ‘master’ -- do not panic!
*** archive
    This branch is for what was already released.  It will never be rebased.
    Its tip will always have a commit title starting with "Release".
*** p -- "perhaps", "probably"
    This branch is where largely-stable changes intended for the next release
    live.  It's very unlikely to undergo rebase, but not entirely impossible.
    (Since Guile-SDL is not so popular, we don't bother announcing it.)
*** q-TOPIC -- "questionably", "querulously"
    These are experimental, exploring the particular TOPIC.  They are intended
    to be ephemeral, undergoing rebase, amendment, and ultimately removal.
*** z-TOPIC -- "zleeping, znoring, zoftly"
    These branches have changes that will never be part of a release.
    They are rebased every once in a while for exercise.
